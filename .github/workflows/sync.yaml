name: Docker Image Sync to Aliyun ACR

on:
  workflow_dispatch:
    inputs:
      images:
        description: 'Enter a comma-separated list of images (e.g. image1,image2,image3)'
        required: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v2

      # 设置 Docker 构建环境
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登录阿里云容器镜像服务
      - name: Log in to Aliyun ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY_URL }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      # 推送 Docker 镜像到阿里云 ACR
      - name: Push Docker image
        run: |
          IFS=',' read -r -a IMAGES <<< "${{ github.event.inputs.images }}"

          for IMAGE in "${IMAGES[@]}"; do
            # 提取镜像名和标签
            IMAGE_NAME=$(echo $IMAGE | cut -d ':' -f 1)
            IMAGE_NAME=$(echo $IMAGE_NAME | rev | cut -d '/' -f 1 | rev)
            IMAGE_TAG=$(echo $IMAGE | cut -d ':' -f 2)
            # https://github.com/lework/skopeo-binary/releases/download/v1.18.0/skopeo-linux-amd64
            wget -O /usr/local/bin/skopeo https://github.com/lework/skopeo-binary/releases/download/v1.18.0/skopeo-linux-amd64
            chmod +x /usr/local/bin/skopeo
            # 推送镜像到新的仓库
            TARGET_IMAGE=${{ secrets.ALIYUN_REGISTRY_URL }}/gh-sync/${IMAGE_NAME}:${IMAGE_TAG}
            skopeo copy docker://$IMAGE docker://$TARGET_IMAGE
            # 拉取镜像
            # docker pull $IMAGE
            # docker tag $IMAGE $TARGET_IMAGE
            # docker push $TARGET_IMAGE
            echo "Pushed image: $TARGET_IMAGE"
          done

